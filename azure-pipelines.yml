# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

jobs:
- job: win_x64
  pool:
    vmImage: 'windows-latest'
  steps:
  - task: UseDotNet@2
    displayName: 'Use .NET Core sdk'
    inputs:
      packageType: sdk
      includePreviewVersions: false
      version: 8.0.x
      installationPath: $(Agent.ToolsDirectory)/dotnet
  - task: NuGetToolInstaller@1
  - task: PowerShell@2
    inputs:
      filePath: 'pack.ps1'
      arguments: 'win-x64'
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: 'publish'
      ArtifactName: 'drop-windows'
      publishLocation: 'Container'
- job: win7_x64
  pool:
    vmImage: 'windows-latest'
  steps:
  - task: UseDotNet@2
    displayName: 'Use .NET Core sdk'
    inputs:
      packageType: sdk
      includePreviewVersions: false
      version: 8.0.x
      installationPath: $(Agent.ToolsDirectory)/dotnet
  - task: NuGetToolInstaller@1
  - task: PowerShell@2
    inputs:
      filePath: 'pack.ps1'
      arguments: 'win7-x64'
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: 'publish'
      ArtifactName: 'drop-windows'
      publishLocation: 'Container'
- job: win_arm
  pool:
    vmImage: 'windows-latest'
  steps:
  - task: UseDotNet@2
    displayName: 'Use .NET Core sdk'
    inputs:
      packageType: sdk
      includePreviewVersions: false
      version: 8.0.x
      installationPath: $(Agent.ToolsDirectory)/dotnet
  - task: NuGetToolInstaller@1
  - task: PowerShell@2
    inputs:
      filePath: 'pack.ps1'
      arguments: 'win-arm64'
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: 'publish'
      ArtifactName: 'drop-windows'
      publishLocation: 'Container'

- job: Linux_x64_builds
  pool:
    vmImage: 'ubuntu-20.04'
  steps:
  - task: UseDotNet@2
    displayName: 'Use .NET Core sdk'
    inputs:
      packageType: sdk
      includePreviewVersions: false
      version: 8.0.x
      installationPath: $(Agent.ToolsDirectory)/dotnet
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        sudo apt-get install ruby ruby-dev rubygems build-essential rpm
        sudo gem install --no-document fpm
  - task: Bash@3
    inputs:
      filePath: 'pack.sh'
      arguments: 'linux-x64'
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: 'publish'
      ArtifactName: 'drop-linux-x64'
      publishLocation: 'Container'

- job: Linux_arm64_builds
  pool:
    vmImage: 'ubuntu-20.04'
  steps:
  - task: UseDotNet@2
    displayName: 'Use .NET Core sdk'
    inputs:
      packageType: sdk
      includePreviewVersions: false
      version: 8.0.x
      installationPath: $(Agent.ToolsDirectory)/dotnet
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        sudo apt-get install ruby ruby-dev rubygems build-essential rpm
        sudo gem install --no-document fpm
  - task: Bash@3
    inputs:
      filePath: 'pack.sh'
      arguments: 'linux-arm64'
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: 'publish'
      ArtifactName: 'drop-linux-arm64'
      publishLocation: 'Container'


- job: OSX_x64_builds
  pool:
    vmImage: 'macOS-11'
  steps:
  - task: UseDotNet@2
    displayName: 'Use .NET Core sdk'
    inputs:
      packageType: sdk
      includePreviewVersions: false
      version: 8.0.x
      installationPath: $(Agent.ToolsDirectory)/dotnet
  - task: Bash@3
    inputs:
      filePath: 'pack.sh'
      arguments: 'osx-x64'
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: 'publish'
      ArtifactName: 'drop-osx'
      publishLocation: 'Container'

- job: OSX_arm64_builds
  pool:
    vmImage: 'macOS-11'
  steps:
  - task: UseDotNet@2
    displayName: 'Use .NET Core sdk'
    inputs:
      packageType: sdk
      includePreviewVersions: false
      version: 8.0.x
      installationPath: $(Agent.ToolsDirectory)/dotnet
  - task: Bash@3
    inputs:
      filePath: 'pack.sh'
      arguments: 'osx.11.0-arm64'
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: 'publish'
      ArtifactName: 'drop-osx-arm64'
      publishLocation: 'Container'